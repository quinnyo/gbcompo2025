include "hardware.inc"


def READ_DIR_COUNT equ 2
def READ_BTN_COUNT equ 2


section "Input State", hram
;; Current input state -- keys that are depressed.
hKeys:: db
;; Keys that were pressed in the most recent update.
hKeysPressed:: db
;; Keys that were released in the most recent update.
hKeysReleased:: db


section "Input", rom0
InputInit::
	xor a
	ldh [hKeys], a
	ldh [hKeysPressed], a
	ldh [hKeysReleased], a
	ret


;; @mut: AF, BC
InputUpdate::
	ld c, low(rP1)

	ld a, P1F_GET_DPAD
	ldh [c], a
	rept READ_DIR_COUNT
		ldh a, [c]
	endr
	or $F0
	ld b, a
	swap b

	ld a, P1F_GET_BTN
	ldh [c], a

	; filter opposite directions
	ld a, b
	and PADF_LEFT | PADF_RIGHT
	ld a, b
	jr nz, :+
	or PADF_LEFT | PADF_RIGHT
	ld b, a
:
	and PADF_UP | PADF_DOWN
	ld a, b
	jr nz, :+
	or PADF_UP | PADF_DOWN
	ld b, a
:

	rept READ_BTN_COUNT
		ldh a, [c]
	endr

	; combine buttons with dirs & invert (so pressed keys are set bits)
	or $F0
	xor b
	ld b, a

	ld a, P1F_GET_NONE
	ldh [c], a

	; update key state
	ldh a, [hKeys]
	xor b
	ld c, a ; C = keys that changed
	and b ; A = keys that changed to pressed
	ldh [hKeysPressed], a
	ld a, b ; A = new state
	ldh [hKeys], a
	cpl
	and c
	ldh [hKeysReleased], a
	ret

