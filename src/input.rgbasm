include "hardware.inc"


section "Input State", wram0
wInput::
	.state:: db
	.pressed:: db
	.released:: db


section "Input", rom0
InputInit::
	xor a
	ld [wInput.state], a
	ld [wInput.pressed], a
	ld [wInput.released], a
	ret


; Process the new input state.
; @param B: new input state
; @mut: A, C
InputUpdate::
	ld a, [wInput.state]
	xor b
	ld c, a ; C = keys that changed
	and b ; A = keys that changed to pressed
	ld [wInput.pressed], a
	ld a, b ; A = new state
	ld [wInput.state], a
	cpl
	and c
	ld [wInput.released], a
	ret


; Read current input state
; @ret B: input state
; @mut: A
InputRead::
	ld a, P1F_GET_DPAD
	ldh [rP1], a
	ldh a, [rP1]
	ldh a, [rP1]
	ld b, a
	ld a, P1F_GET_BTN
	ldh [rP1], a
	ld a, b
	or $F0
	swap a
	ld b, a
	ldh a, [rP1]
	or $F0
	xor b
	ld b, a
	ld a, P1F_GET_NONE
	ldh [rP1], a
	ret

