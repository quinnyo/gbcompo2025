section "Mem", rom0
;; Copy up to 256 bytes from one location to another.
;; @param C: length, 0 is interpreted as 256
;; @param DE: source
;; @param HL: destination
;; @mut: AF, C, DE, HL
MemCopySmall::
:
	ld a, [de]
	inc de
	ld [hl+], a
	dec c
	jr nz, :-
	ret


;; Copy up to 65536 bytes from one location to another.
;; (joke about finding 64K to read + 64K to write)
;; @param BC: length, 0 is interpreted as 65536
;; @param DE: source
;; @param HL: destination
;; @mut: AF, BC, DE, HL
MemCopyLarge::
	dec bc
	inc c
	inc b
:
	ld a, [de]
	inc de
	ld [hl+], a
	dec c
	jr nz, :-
	dec b
	jr nz, :-
	ret


;; Fill a block of memory (up to 256 bytes) with a single value.
;; @param A: value
;; @param C: length, 0 is interpreted as 256
;; @param HL: destination
;; @mut: F, C, HL
MemFillSmall::
:
	ld [hl+], a
	dec c
	jr nz, :-
	ret


;; @param A: value
;; @param BC: length, 0 is interpreted as 65536
;; @param HL: destination
;; @mut: AF, BC, DE, HL
MemFillLarge::
	dec bc
	inc c
	inc b
:
	ld [hl+], a
	dec c
	jr nz, :-
	dec b
	jr nz, :-
	ret
