if !def(Q_ENTITY_INC_b4moRE1M)
def Q_ENTITY_INC_b4moRE1M equ 1


def ENTITY_COUNT_MAX equ 16

def GRAVITY_100 equ $0_6
; Maximum magnitude of either velocity component (each axis is clamped independently)
def ENT_VELOCITY_MAX equ 100

def szEntity_Info    equ 1
def szEntity_Ctrl    equ 1
def szEntity_AccX    equ 1
def szEntity_VelX    equ 1
def szEntity_PosX    equ 2
def szEntity_AccY    equ 1
def szEntity_VelY    equ 1
def szEntity_PosY    equ 2
def szEntity_Collide equ 2

rsreset
def Entity_Info    rb szEntity_Info
def Entity_Ctrl    rb szEntity_Ctrl
def Entity_AccX    rb szEntity_AccX
def Entity_VelX    rb szEntity_VelX
def Entity_PosX    rb szEntity_PosX
def Entity_AccY    rb szEntity_AccY
def Entity_VelY    rb szEntity_VelY
def Entity_PosY    rb szEntity_PosY
def Entity_Collide rb szEntity_Collide
def _Entity_Pad    rb 4
def szEntity    rb 0


def ENTINFOB_ID0 equ 0
def ENTINFOB_ID1 equ 1
def ENTINFOB_ID2 equ 2
def ENTINFOB_ID3 equ 3
def _ENTINFOB_4 equ 4
def _ENTINFOB_5 equ 5
def _ENTINFOB_6 equ 6
def ENTINFOB_ALIVE equ 7

def ENTINFOF_ID equ $0F
def _ENTINFOF_4 equ 1 << _ENTINFOB_4
def _ENTINFOF_5 equ 1 << _ENTINFOB_5
def _ENTINFOF_6 equ 1 << _ENTINFOB_6
def ENTINFOF_ALIVE equ 1 << ENTINFOB_ALIVE


;; Flap effect level & timer
def mENTCTRL_FLAP  equ $0F


macro entity_index
	assert _NARG == 1
	assert (\1) <= szEntity
	ld a, l
	and $F0
	add (\1)
	ld l, a
endm


endc ; Q_ENTITY_INC_b4moRE1M
