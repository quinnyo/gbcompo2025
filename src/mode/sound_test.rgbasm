include "hardware.inc"
include "mode.rgbinc"
include "banker.rgbinc"


	mode_def modeSoundTest


section union "{MODE_COMMON}", wramx
wSfxSelect: db


section "modeSoundTest", romx
modeSoundTest_Enter::
	wrambpush bank("{MODE_COMMON}")
	xor a :: ld [wSfxSelect], a
	wrambpop

	ld a, MODE_STATE_PROCESS :: ldh [hModeState], a
	ret


modeSoundTest_Process::
	wrambopen bank("{MODE_COMMON}")

	ldh a, [hKeysPressed] :: ld b, a
	ld a, [wSfxSelect]
	bit PADB_A, b
	jr nz, .play

	ld e, a
	ld d, SFX_COUNT
	call IndexNavi
	ret nc
	ld a, e
	ld [wSfxSelect], a
.play
	jp audio_play_fx


;; Navigate list using up/down direction keys.
;; @param E: index
;; @param D: list size
;; @param B: keys
;; @ret E: new index
;; @ret F.C: set if new index differs
IndexNavi:
	bit PADB_DOWN, b
	jr z, :+
	inc e

	ld a, e
	cp d
	sbc a ; $FF if in range
	and e
	jr .apply
:

	bit PADB_UP, b
	jr z, :+
	dec e

	ld a, e
	cp d
	sbc a :: cpl ; $FF if out of range
	and d
	add e
	jr .apply
:
	and a ; clear F.C
	ret

.apply
	ld e, a
	scf
	ret

