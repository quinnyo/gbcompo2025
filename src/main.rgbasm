include "hardware.inc"
include "stuff.rgbinc"
include "banker.rgbinc"


def PLATFORM_CGB   equ $02 ; host is CGB
def PLATFORM_SGB   equ $04 ; host is SGB
def PLATFORM_COLOR equ $08 ; CGB mode
def PLATFORM_REV   equ $10 ; CGB=AGB, SGB=SGB2, 0=MGB


section "wPlatform", wram0
wPlatform::
	.flags:: db


section "LCD Interrupt", rom0[$48]
	reti


section "Timer Interrupt", rom0[$50]
	reti


section "Serial Interrupt", rom0[$58]
	reti


section "Joypad Interrupt", rom0[$60]
	reti


section "Header", rom0[$100]
	nop
	jp Boot

	ds $150 - @, 0


section "assets/fonty8.chr", romx, align[4]
incbin "assets/fonty8.chr"


section "assets/iconoglyphs.chr", romx, align[4]
incbin "assets/iconoglyphs.chr", 0, 16 * 8


section "assets/character_test.chr", romx, align[4]
incbin "assets/character_test.chr"


section "assets/character_test.chr.pal", romx
incbin "assets/character_test.chr.pal"


section "assets/enviro1.chr", romx, align[4]
incbin "assets/enviro1.chr"


section "assets/enviro1.chr.pal", romx
incbin "assets/enviro1.chr.pal"


section "assets/enviro0.chr", romx, align[4]
incbin "assets/enviro0.chr"


section "assets/enviro0.chr.pal", romx
incbin "assets/enviro0.chr.pal"


section "Main", rom0
Boot:
	; A = 11(CGB,AGB)
	cp $11
	jr z, .detect_color
	; A = FF(MGB,SGB2), 01(DMG,SGB)
	and PLATFORM_REV
	; C = 13(DMG,MGB), 14(SGBx)
	or PLATFORM_SGB
	and c
	jr .detect_finalise
.detect_color:
	; D = 00(DMG Mode), FF(CGB Mode)
	ld a, PLATFORM_COLOR
	and d
	or PLATFORM_CGB
	; B = 00(CGB), 01(AGB)
	swap b
	or b
	jr .detect_finalise
.detect_finalise
	ld [wPlatform.flags], a

	and PLATFORM_COLOR
	jp z, MonochromeTears

Main::
	ld sp, wStack + WSTACK_SIZE

	di

	xor a
	ldh [rNR52], a

	vblank_wait
	xor a
	ldh [rLCDC], a

	call RombInit
	call WrambInit

	; give in and enable double speed mode!
	ldh a, [rSPD]
	and $80
	jr nz, :+
	; for some reason, clear IE & input select
	xor a :: ldh [rIE], a
	ld a, $30 :: ldh [rP1], a
	ld a, 1 :: ldh [rSPD], a
	stop
:

	call VBlankInit
	call ObxInit
	call InputInit
	call PalettesInit
	call CurtainInit
	call CurtainForceClose
	call MapInit
	call VramxInit
	call audio_init
	call MusInit
	call OptInit
	call QmenuInit
	call ModeInit
	ld de, rModes_modeDefault
	;ld de, rModes_modeSoundTest
	call ModeSetActive

;	ld b, bank("assets/iconoglyphs.chr")
;	ld de, startof("assets/iconoglyphs.chr")
;	ld c, sizeof("assets/iconoglyphs.chr") / 16
;	ld hl, $8000
;	call VxLoadRom

	ld b, bank("assets/fonty8.chr")
	ld de, startof("assets/fonty8.chr")
	ld c, sizeof("assets/fonty8.chr") / 16
	ld hl, $9001
	call VxLoadRom

	ldh a, [rLCDC]
	or LCDCF_ON | LCDCF_BGON | LCDCF_OBJ16 | LCDCF_OBJON
	ldh [rLCDC], a

	xor a
	ldh [rIF], a
	ei
.loop:
	call InputRead
	call InputUpdate
	call VramxSync
	call QmenuUpdate
	call ModeUpdate
	call ObdoFinaliseFrame

.vsync
	ld hl, wVBlankCount
	ld a, [hl]
.vsync_wait
	halt
	nop
	cp [hl]
	jr z, .vsync_wait

	di
	call VramxBeginUpdate
	call PalettesSync
	ei

:
	ldh a, [rLY]
	cp 144
	jr nc, :-

	call audio_update
	call MusTick
	call CurtainUpdate
	call ObdoRewind

	jp .loop

